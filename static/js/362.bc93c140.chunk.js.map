{"version":3,"file":"static/js/362.bc93c140.chunk.js","mappings":"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","sources":["Components/Setting-Search.js","Components/Nav-Bar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Setting-Search.css';\r\n\r\nconst Search = () => {\r\n\r\nconst [searchButton, setSearchButton] = useState(false);\r\n\r\nconst searchBox = () => {\r\n    setSearchButton(prevSearchButton => !prevSearchButton);\r\n};\r\n\r\n\r\n    // Access the styled elements and update their styles\r\n    const styledElements = document.getElementsByName('body');\r\n    for (const element of styledElements) {\r\n      element.style.backgroundColor = searchButton ? 'grey' : 'transparent';\r\n      // Add more styles here as needed\r\n    }\r\n\r\n\r\n  return (\r\n    <>\r\n  <button \r\n  type='button' \r\n  id='search' \r\n  className='search-button hovered'\r\n  onClick={searchBox}\r\n  >\r\n  </button>\r\n  {searchButton && (\r\n    <>\r\n    <input type=\"search\" id=\"searchbar\" placeholder=\"Search\">\r\n    </input>\r\n    <div className=\"backdrop\">\r\n      {/*This is where you'll be adding the feature of the backdrop. Make sure you add a class for it as well and put it in the style sheet so you can get the dimming affect */}\r\n    </div>\r\n    </>\r\n  )}\r\n  </>\r\n  );\r\n\r\n};\r\n\r\nconst Setting = () => {\r\n  const [showBox, setShowBox] = useState(false);\r\n\r\n  const settingButton = () => {\r\n    setShowBox(prevShowBox => !prevShowBox);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        type=\"button\"\r\n        id=\"setting\"\r\n        className={`setting-button ${showBox ? 'active' : ''}`}\r\n        onClick={settingButton}\r\n      ></button>\r\n      {showBox && (\r\n        <div id=\"setting-div\">\r\n          <a className=\"setting-a\" href='http://localhost:3000/#'>Setting</a>\r\n          <a className=\"setting-a\" href='http://localhost:3000/#'>Sign Out</a>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { Setting };\r\nexport default Search;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Navbar, Nav, Button, Form, FormControl } from 'react-bootstrap';\r\nimport './Nav-Bar.css';\r\nimport { Setting } from './Setting-Search';\r\nimport Search from './Setting-Search';\r\n\r\nconst NavBar = () => {\r\n  const [showOffcanvas, setShowOffcanvas] = useState(false);\r\n  const [isScrolled, setIsScrolled] = useState(false);\r\n\r\n  const handleToggleOffcanvas = () => {\r\n    setShowOffcanvas(!showOffcanvas);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      setIsScrolled(window.scrollY > 100); // Use scrollY instead of pageYOffset\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const navbarBackgroundColor = isScrolled ? 'black' : 'transparent';\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        bg={navbarBackgroundColor}\r\n        variant=\"dark\"\r\n        fixed=\"top\"\r\n        style={{ transition: 'background-color 0.3s ease-in-out' }}\r\n        className={isScrolled ? 'navbar-scrolled' : ''}\r\n      >\r\n        <Button\r\n          variant=\"outline-light\"\r\n          aria-controls=\"offcanvasDarkNavbar\"\r\n          aria-label=\"Toggle navigation\"\r\n          onClick={handleToggleOffcanvas}\r\n          className=\"nav-menu-button\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </Button>\r\n        <Navbar.Brand href=\"#\" className=\"ms-3 logo-container\">\r\n          <img\r\n            src=\"https://i.postimg.cc/LsLxvqKV/Netflix-Logo-Main.png\"\r\n            alt=\"Netflix Logo\"\r\n            className=\"d-inline-block align-top logo\"\r\n          />\r\n        </Navbar.Brand>\r\n        <Search />\r\n        <Setting />\r\n      </Navbar>\r\n      <Navbar\r\n        bg=\"dark\"\r\n        variant=\"dark\"\r\n        expand=\"lg\"\r\n        className={`offcanvas offcanvas-start ${showOffcanvas ? 'show' : ''}`}\r\n        style={{\r\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n          border: 'none',\r\n          borderBottom: '1px solid rgba(255, 255, 255, 0.2)',\r\n        }}\r\n      >\r\n        <Navbar.Toggle aria-controls=\"offcanvasDarkNavbar\" />\r\n        <Navbar.Offcanvas\r\n          id=\"offcanvasDarkNavbar\"\r\n          aria-labelledby=\"Netflix\"\r\n          placement=\"start\"\r\n          show={showOffcanvas}\r\n          onHide={() => setShowOffcanvas(false)}\r\n        >\r\n          <Form className=\"d-flex mt-3 mb-3\">\r\n            <FormControl\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              className=\"me-2 search-input\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <Button variant=\"success\" type=\"submit\" className=\"red-button\">\r\n              Search\r\n            </Button>\r\n          </Form>\r\n          <Nav className=\"flex-column\">\r\n            <Nav.Link href=\"#home\" className=\"nav-link white-text\">Home</Nav.Link>\r\n            <Nav.Link href=\"#link\" className=\"nav-link white-text\">Link</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Offcanvas>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n"],"names":["Setting","_useState3","useState","_useState4","_slicedToArray","showBox","setShowBox","_jsxs","_Fragment","children","_jsx","type","id","className","concat","onClick","prevShowBox","href","_step","_useState","_useState2","searchButton","setSearchButton","styledElements","document","getElementsByName","_iterator","_createForOfIteratorHelper","s","n","done","value","style","backgroundColor","err","e","f","prevSearchButton","placeholder","showOffcanvas","setShowOffcanvas","isScrolled","setIsScrolled","useEffect","handleScroll","window","scrollY","addEventListener","removeEventListener","navbarBackgroundColor","Navbar","bg","variant","fixed","transition","Button","Brand","src","alt","Search","expand","border","borderBottom","Toggle","Offcanvas","placement","show","onHide","Form","FormControl","Nav","Link"],"sourceRoot":""}